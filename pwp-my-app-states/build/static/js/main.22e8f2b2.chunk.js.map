{"version":3,"sources":["components/CreateCard.js","containers/MainContainer.js","containers/Nav.js","containers/App.js","reportWebVitals.js","index.js"],"names":["CreateCard","state","input","handleInput","event","persist","setState","target","value","handleNewCard","preventDefault","props","createNewCard","onSubmit","this","className","onChange","type","React","Component","MainContainer","fetch","method","headers","Accept","body","JSON","stringify","title","then","resp","json","newCard","cards","Nav","src","alt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAuCeA,E,4MAjCXC,MAAQ,CACJC,MAAO,I,EAGXC,YAAc,SAACC,GACXA,EAAMC,UACN,EAAKC,SAAS,CACVJ,MAAOE,EAAMG,OAAOC,S,EAI5BC,cAAgB,SAACL,GACbA,EAAMM,iBACN,EAAKC,MAAMC,cAAc,EAAKX,MAAMC,Q,4CAGxC,WACI,OACI,8BACI,uBAAMW,SAAUC,KAAKL,cAAeM,UAAU,gBAA9C,UACI,6CACA,uBAAOC,SAAUF,KAAKX,YAAaY,UAAU,iBAAiBE,KAAK,OAAOT,MAAOM,KAAKb,MAAMC,QAC5F,uBAAOa,UAAU,iBAAiBE,KAAK,SAAST,MAAM,yB,GAxBjDU,IAAMC,WCgChBC,G,0NA5BXR,cAAgB,SAACV,GACbmB,MAAM,8BAA+B,CACjCC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChBC,OAAQ,oBAEZC,KAAMC,KAAKC,UAAU,CACjBC,MAAO1B,MAGV2B,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GACF,EAAK1B,SAAS,CACV2B,MAAM,GAAD,mBAAM,EAAKhC,MAAMgC,OAAjB,CAAwBD,U,4CAK7C,WACI,OACI,qBAAKjB,UAAU,iBAAf,SACI,cAAC,EAAD,CAAYH,cAAeE,KAAKF,sB,GAvBpBM,IAAMC,YCEnBe,MAPf,WACI,OACI,qBAAKnB,UAAY,MAAjB,SACA,qBAAKA,UAAY,OAAOoB,IAAK,cAAcC,IAAI,iBCWxCC,MATf,WACI,OACI,cADK,CACL,OAAKtB,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,QCCGuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.22e8f2b2.chunk.js","sourcesContent":["// import { render } from \"@testing-library/react\";\r\nimport React from 'react';\r\n\r\n\r\nclass CreateCard extends React.Component {\r\n\r\n    state = {\r\n        input: \"\"\r\n    }\r\n\r\n    handleInput = (event) => {\r\n        event.persist();\r\n        this.setState({\r\n            input: event.target.value\r\n        });\r\n    }\r\n\r\n    handleNewCard = (event) => {\r\n        event.preventDefault();\r\n        this.props.createNewCard(this.state.input);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleNewCard} className='new-card-form'>\r\n                    <h4>Create card</h4>\r\n                    <input onChange={this.handleInput} className='new-card-input' type='text' value={this.state.input} />\r\n                    <input className='new-card-input' type='Submit' value='Create card' />\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default CreateCard;","import React from 'react';\r\nimport ToDoCard from '../components/ToDoCard';\r\nimport CreateCard from '../components/CreateCard';\r\nimport ToDoCardContainer from './ToDoCardContainer';\r\nimport { render } from '@testing-library/react';\r\n\r\n\r\nclass MainContainer extends React.Component {\r\n    createNewCard = (input) => {\r\n        fetch('http://localhost:3000/cards', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Accept: 'Application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                title: input\r\n            })\r\n        }) // pulls from data localhost\r\n            .then(resp => resp.json())\r\n            .then(newCard => {\r\n                this.setState({\r\n                    cards: [...this.state.cards, newCard]\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='main-container'>\r\n                <CreateCard createNewCard={this.createNewCard} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainContainer;","import React from 'react';\r\n\r\nfunction Nav() {\r\n    return ( \r\n        <div className = \"nav\" >\r\n        <img className = \"logo\" src =\"../logo.svg\" alt=\"some logo\"/> \r\n        </div>\r\n    );\r\n}\r\nexport default Nav;","import React from 'react';\r\nimport '../App.css';\r\nimport MainContainer from './MainContainer';\r\nimport Nav from './Nav';\r\n\r\n\r\n\r\nfunction App(){\r\n    return ( //jsx syntax , returns only single element, we cannot return multiple tags\r\n        <div className='App'>\r\n            <Nav/>\r\n            <MainContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}